ルートディレクトリ

ディレクトリ階層の頂点。「/」で表される。
ルートディレクトリを含んだファイルシステムをルートファイルシステムという。


gzipコマンド

ファイルを圧縮する。
gzipで圧縮されたファイルは.gzとなる。
gzip以外にbzip2コマンドを使っても圧縮できる。gzipよりも圧縮効率は高いが処理に時間がかかる。

gzipで圧縮されたファイルを解凍する場合、gunzipコマンドを、bzip2で圧縮された「.bz2」ファイルはbunzip2コマンドを使う。

bzip2よりもさらに圧縮効率が高いのがxzコマンドを使った圧縮。


圧縮ファイルの閲覧

圧縮されたテキストファイルは、次のコマンドで解凍しなくても内容を確認できる。
zcat ... gzipで圧縮されたファイル
bzcat ... bzip2
xzcat ... xz


アーカイブ

複数のファイルをまとめたファイル。


tarコマンド

ファイルやディレクトリをひとつのアーカイブファイルにまとめたり展開したりする。
-zオプションでgzipを、-jオプションでbzip2。
tarコマンドでは「-」を省略できる。


cpioコマンド

ファイルをアーカイブファイルにコピーしたり、アーカイブからファイルをコピーする。


ddコマンド

入力側に指定したファイルからの入力を、ファイルもしくは標準出力に送る。


アクセス権

読み取り可能、書き込み可能、実行可能の3種類。
-rwxrwxrwx
「ファイル種別」「所有者のアクセス権」「グループのアクセス権」「その他ユーザーのアクセス権」

ファイル種別
- ... 通常のファイル
d ... ディレクトリ
l ... リンク


chmodコマンド

アクセス権を変更する。
u ... 所有者
g ... グループ
o ... その他ユーザー
a ... すべてのユーザー
+ ... 権限を追加
- ... 権限を削除
= ... 権限を指定
chmod go+w samplefile
chmod o-rw samplefile
chmod 644 samplefile


SUID (Set User ID)

実行権のあるファイルに設定される特殊なアクセス権。
通常、実行ファイルを実行するとそのファイルを実行したユーザーの権限で実行されるが、SUIDが設定されたファイルでは、その実行ファイルの所有者のアカウント権限で実行される。passwdコマンドなど。
所有者のアクセス権が「rws」となっていればSUID。数値では4000が足される。
追加コマンド
chmod u+s samplefile

SGID (Set Group ID)
グループのアクセス権の実行権が「s」になる。
数値では2000が足される。
追加コマンド
chmod g+s samplefile


スティッキービット

その他ユーザーの実行権が「t」となる。
スティッキービットが設定されたディレクトリでは、書き込み権限はあっても自分以外のユーザーが所有するファイルを削除することはできない。
数値の場合は1000が足される。
chmod o+t sampledir


umaskコマンド

ファイルやディレクトリを作成したときに設定されるアクセス権は、umask値で決定される。
ファイルは666から、ディレクトリは777からumask値を引いた値がデフォルトのアクセス権として適用される。
umaskコマンドでumask値の設定や確認ができる。


chownコマンド

ファイルやディレクトリの所有者を変更する。
変更できるのはrootユーザーのみ。


chgrpコマンド

ファイルやディレクトリの所有するグループを変更する。
chgrpコマンドは一般ユーザーでも使えるが、その際に変更できるグループは実行するユーザーが所属しているグループに限られる。
スーパーユーザーはどのグループにでも変更できる。


ハードリンクとシンボリックリンク

ファイルやディレクトリに別名をつけ、異なった名前で同一のファイルにアクセスできる仕組みが備わっている。
Linuxには2種類の仕組みがある。
ファイルをディスクに保存すると、重複しないiノード番号が割り当てられる。
すべてのファイルには対応するiノードが存在し、iノードにはディスク上のファイルに関する属性情報が格納されている。
iノードに格納されている情報の一部
・ファイル種別
・ファイルサイズ
・アクセス権
・所有者
・リンク
・ディスク上の物理的な保存場所（ブロック番号）

ファイルの実態（ディスク上に保存されているデータ）が1つでも、その実態を参照するファイルが複数あれば、それぞれのファイル名で同一の実態を参照することができる。これをハードリンクという。
ハードリンクは元のファイルとiノードが同じなので、リンクとして作成したファイルの区別がつけられない。
ハードリンクの場合は、いずれのハードリンクファイルに変更を加えても、同一の実体に対して変更を加えることになる。
ハードリンクが複数作成されている場合、そのすべてを削除するまではファイルの実体は削除されない。


シンボリックリンク

リンク元の場所を指し示す。
シンボリックリンク自身が持っているのは、リンク元へのポインタ。
そのため、シンボリックリンクを残したままリンク元のファイルを削除することも可能。この場合、シンボリックリンクにアクセスすると実体ファイルが見つけられずエラーになる。


lnコマンド

リンクを作成する。
オプション無しの場合、ハードリンクになる。
シンボリックリンクは-sで作成。
ln file.original file.link_hard
ln -s file.original file.link_sym

ディレクトリのハードリンクは作成できないが、シンボリックリンクは作成できる。
