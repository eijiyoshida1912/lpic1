ファイルシステム

ディスクに保存されるデータをファイルとして管理する仕組み。
ハードディスクやSSDを利用するには、ディスク内にパーティションを作成し、次にパーティション内にファイルシステムを作成し、そのファイルシステムをマウントするという作業を行う。


ハードディスクの接続形態

・SATA
現在主流となっている規格。
かつて広く使われていたIDEに比べデータ転送速度が速く、ほとんどのPCで標準搭載されている。

・SAS
SATAよりも高速で信頼性が高い。
主にサーバ用途で使われるが、SATAと比べて効果。

・SCSI
ハードディスクやDVDドライブ、テープドライブなどさまざまな周辺機器を接続するための一般的な規格。

・USB


デバイスファイル

ハードディスクやSSD、DVDドライブ、シリアルポートといった入出力を扱うための特殊なファイル。
デバイスに関連付けられたファイルを利用して、ファイルと同じようにデバイスにアクセスすることができる。
デバイスファイルへの書き込みはデバイスへの出力を、デバイスファイルの読み込みはデバイスからの入力を表す。


主なデバイスファイル

/dev/sda ... 1番めのハードディスク
/dev/sdb ... 2番めのハードディスク
/dev/sdc ... 3番めのハードディスク
/dev/sdd ... 4番めのハードディスク
/dev/sr0 ... 1番めのCD/DVDドライブ
/dev/st0 ... 1番めのテープドライブ

Linuxが扱うデバイスには、ブロックデバイスとキャラクタデバイスがある。
ハードディスクやSSD等、メディア上の任意の場所にアクセスできるデバイスがブロックデバイス。
キーボードやシリアルポートなど、文字単位でデータを読み書きするデバイスがキャラクタデバイス。
ディスクやパーティションはブロックデバイス。


lsblkコマンド

システムのブロックデバイス一覧を表示する。


パーティションの種類

1台のディスクドライブを複数の論理的な区画（パーティション）に分割して使うことができる。
それぞれのパーティションには、異なるファイルシステムを作成できる。
BIOSベースのシステムでは以下の3つ。

・基本パーティション
ディスクには最大4個の基本パーティションを作成することができる。
パーティション内にはファイルシステムを格納する。
基本パーティションのデバイスファイル名は、ハードディスク/dev/sdaの場合、/dev/sda1～sda4となる。

・拡張パーティション
基本パーティションの一つを拡張パーティションにすることができる。
拡張パーティションの中にはファイルシステムではなく、論理パーティションが格納される。

・論理パーティション
拡張パーティション内に作成されたパーティション。
論理パーティションのデバイスファイル名は、作成済み基本パーティションの数にかかわらず、/dev/sda5以降となる。


ルートファイルシステム

/ディレクトリを含むファイルシステム。
/ディレクトリの直下には、/homeや/varといったディレクトリが配置される。
耐障害性、保守性を高めるために複数のパーティションを用意し、各パーティションに/home、/varなどのディレクトリを割り当てるのが一般的。


ルートファイルシステムに必要なディレクトリ

/bin、/sbin ... システムに必要なコマンドやプログラム
/etc ... 各種設定
/lib ... ライブラリ
/dev ... デバイスファイル


fdiskコマンド

パーティションの作成、削除、変更、情報表示などを行う。


gdiskコマンド

GPTに対応したパーティション操作を行う。
パーティションテーブルの方式には従来のMBR（マスターブートレコード）の他にGPT（GUIDパーティションテーブル）がある。
MBRでは扱えるハードディスクの容量は2TBまでであり、基本パーティションは4個。
GPTでは2TBの制限はなくなり、パーティションも128個まで作れる。


partedコマンド

MBR、GPT両方に対応したパーティション操作コマンド。


ファイルシステムの作成

パーティションを作成しただけでは、まだファイルを保存することはできない。次にファイルシステムを作成する必要がある。
ファイルシステムは、ファイルとしてディスク上のデータを扱う仕組み。
セクタはディスク上の区画を表すが、ハードディスクでは通常1セクタが512バイト、CD-ROMでは2048バイトなど、媒体によって変わる。
ファイルシステムではブロックという単位でデータを保存し管理する。
Linuxのファイルシステムでは「ファイルの中身（データ）」と「ファイルの属性や管理情報」は別々に保存されている。
後者を格納するのがiノード（Indexノード）と呼ばれる管理領域。
iノードはファイルシステム作成時にあらかじめ用意されており、ファイルやディレクトリを作成するたびに1つずつ使われていく。
すべてのファイルやディレクトリには、それを管理するiノードがある。


ファイルシステムの種類
Linuxで扱うことのできるファイルシステムにはさまざまな種類がある。
多くのディストリビューションで採用されているのはext4というファイルシステム。
ext4とその旧バージョンであるext2、ext3はLinux向けに開発されたファイルシステム。
ext2/ext3/ext4ファイルシステムは互換性があり、管理コマンドの多くは共通している。
Btrfsは比較的最近になって開発が始まったファイルシステム。


mkfsコマンド

パーティション上にファイルシステムを作成する。


mke2fsコマンド

ext2、ext3、ext4ファイルシステムを作成するにはmke2fsコマンドも利用できる。
デフォルトではext2ファイルシステムを作成する。


mkfs.btrfsコマンド

Btrfsを作成する。


Btrfsの特徴

・複数の物理ボリュームをまとめて1つの仮想的なボリュームが作成できる（ストレージプール）
・複数の物理ボリュームにまたがってファイルシステムを作成できる（マルチデバイスファイルシステム）
・ある時点でのファイルシステムの状態の記録であるスナップショットを作成できる。
・ファイルシステムを分割したサブボリュームを利用できる。


mkswapコマンド

パーティション上にスワップ領域を作成する。
通常はスワップ領域として独立したパーティションを割り当てる。
システムには最低一つのスワップ領域が必要。


ファイルシステムに書き込めなくなる原因

・空き容量が不足している
・使用できるiノードが無い


dfコマンド

ファイルシステムの空き容量を表示する。
df -iでiノードの使用状況を確認する。


duコマンド

ファイルやディレクトリが占めている容量を表示する。


fsckコマンド

ディスクのチェックを行い、必要であれば修復を試みる。


e2fsckコマンド

ext2、ext3、ext4ファイルシステムのチェックと修復をする。


tune2fsコマンド

ext2、ext3、ext4ファイルシステムのさまざまなパラメータを設定する。
ファイルシステムをfsckコマンドでチェックする。


XFS

多くのLinuxディストリビューションではext4が標準のファイルシステムになっているが、Red Hat Enterprise LinuxやCentOS 7ではXFSが標準のファイルシステムとなっている。堅固で高速なジャーナリングファイルシステム。
現在はオープンソースとなっており、多くのディストリビューションで利用可能。


マウント

あるファイルシステムに別のファイルシステムを組み込んで、全体として1つのファイルシステムとして扱えるようにすること。
ディスク上のファイルシステムを利用するためには、最初にマウントをする必要がある。
マウントしたファイルシステムが結合されるディレクトリがマウントポイント。


/etc/fstabファイル

ファイルシステムの情報が記述されている。
マウントする時にはこの設定ファイルが参照されるため、マウントする頻度の高いファイルシステムを記述しておく。


UUID

デバイスを識別するために使われるID。


blkidコマンド

デバイスファイルとUUIDの対応を確認する。


umountコマンド

ファイルシステムをアンマウントする。


FHS（Filesystem Hierarchy Standard　ファイルシステム階層標準）

Linuxにおけるファイルシステム内のレイアウトはFHSとして標準化が進められている。
主要なディストリビューションはFHSをサポートしている。
ルートファイルシステムはLinuxのディレクトリ階層の中で最上位に位置する。
ルートファイルシステムに含まなければならないディレクトリは/bin、/sbin、/etc、/dev、/lib。


/bin

基本的なコマンドが配置される。
このディレクトリにあるコマンドは一般ユーザーでも実行可能。


/sbin

システム管理に必須のコマンドが配置される。
このディレクトリにあるコマンドは、rootユーザーのみ実行可能。


/etc

システムやアプリケーションの設定情報、スクリプトファイルなどが配置される。


/dev

ハードディスクやDVD-ROM等のデバイスファイルが配置される。
デバイスファイルは特殊ファイルであり、デバイスに応じたデバイスファイルが必要。


/lib

共有ライブラリやカーネルモジュールが配置される。
/bin、/sbinにあるコマンドが必要とするライブラリはここに配置される。


/media

DVD-ROMなどリムーバブルメディアのマウントポイントが配置される。


/mnt

一時的にマウントするファイルシステムのマウントポイントが配置される。


/opt

パッケージ管理の仕組みを使ってプログラムがインストールされるディレクトリ。
ディストリビューションによっては配置されない。


/proc

カーネル内部の情報にアクセスするための仮想的なファイルシステム。
このディレクトリ内のファイルはファイルのように見えるだけで、実際にはディスク上に存在しない。


/root

スーパーユーザーrootのホームディレクトリ。
/homeファイルシステムがマウントできなくなった場合でも、システムのメンテナンスを行うことができるよう、/homeとは別になっている。


/boot

起動に必要な設定やカーネルイメージが配置される。
起動時にBIOSの制限を受けないようにするため、ルートファイルシステムとは別にディスクの先頭付近に配置されることがある。


/home

ユーザーごとのホームディレクトリが置かれる。
独立したファイルシステムにすることによりクォータを設定することができたり、保守性を向上させたりできる。


/tmp

一時ファイルが置かれる。
すべてのユーザーが読み書き可能。


/var

ログファイル、メールやプリンタのスプールなど、頻繁に書き換えられるファイルが配置される。
/varディレクトリの下はさらに細分化されており、以下のディレクトリがある。

・/var/cache
manコマンドで表示するために成型したデータなど、一時的なキャッシュファイルが配置される。
・/var/lock
アプリケーションが排他制御に使うためのロックファイルが配置される。
・/var/log
ログファイルが書き出される。
・/var/run
システムの状態を示すファイルが配置される。
特に、PIDが格納されたファイルをみるとPIDを調べることができる。
・/var/spool
印刷待ちのデータや予約されたジョブなど、処理待ちのデータが配置される。


/usr

コマンドやユーティリティなどが配置される。
/usrディレクトリの下はさらに細分化され、以下のディレクトリがある。

・/usr/bin
ユーザーが一般的に使うコマンドで、緊急時のシステム保守に必須ではないコマンドはここに配置される。
・/usr/sbin
システム管理コマンドで、緊急時のシステム保守に必須ではないコマンドが配置される。
・/usr/lib
プログラムに必要な共有ライブラリが配置される。
・/usr/local
ローカルシステムで必要とされるコマンドやライブラリ、ドキュメントなどが配置される。
このディレクトリ内はさらにbin、sbin、libなどのディレクトリに細分化される。
・/usr/share
x86やx86_64といったシステムアーキテクチャに依存しないファイルが配置される。
・/usr/src
Linuxのカーネルソースなどのソースコードが配置される。


ファイルの検索

Linuxにはさまざまな検索コマンドが用意されている。


findコマンド

指定したディレクトリ以下から、検索条件にマッチするファイルやディレクトリを検索する。
ファイル名だけでなく、アクセス権やファイルサイズ、更新日時などを併用して検索できたり、検索条件にメタキャラクタが使えるほか、検索条件にマッチしたファイルに対して削除などのアクションを起こすなど、高度な処理が可能。


locateコマンド

あらかじめ作成されたデータベースに基づいて、指定されたパターンに一致するファイルを検索する。
findコマンドよりも高速に動作する。


updatedbコマンド

locateコマンドはあらかじめ作成されたファイル名データベースに基づいて検索するので、findコマンドよりも高速に動作する。
しかし、データベースの更新後に作成・変更されたファイルは見つけることができない。
データベースを更新するにはupdatedbコマンドを使う。
updatedbコマンドは、多くのディストリビューションではcronを用いて定期的に更新されるようになっている。
updatedbコマンドの動作を変更するには/etc/updatedb.confファイルを編集する。


whichコマンド

コマンドを探し出して絶対パスを表示する。


whereisコマンド

指定されたコマンドのバイナリファイル、ソースコード、マニュアルファイルが置かれている場所を検索する。


typeコマンド

指定したコマンドが通常の実行ファイルなのか、シェルの組み込みコマンドなのか、エイリアスなのかといった情報を表示する。




